rm(list = ls())
sf <- matrix(NA, 4, 2)
sf[,1] <- c(1,0,1,0)
sf[,1] <- c(1,-1,1,-1)
sf[,2] <- c(1,1,-1,-1)
vox <- matrix(NA, 4, 3)
vox[,1] <- c(1,-1,-1,1)
vox[,2] <- c(-1,1,1,-1)
wox[,3] <- c(1,-1,-1,-1_
wox[,3] <- c(1,-1,-1,-1)
vox[,3] <- c(1,-1,-1,-1)
tmp <- cbind(sf, vox)
tmp
names(tmp) <-c("fly","animal","v1","v2","v3")
row.names(tmp) <- c("bird","car","plane","dog")
tmp
tmp <- as.data.frame(cbind(sf, vox))
names(tmp) <-c("fly","animal","v1","v2","v3")
row.names(tmp) <- c("bird","car","plane","dog")
tmp
m <- lm(v1 ~ fly + animal, data = tmp)
summary(m)
m <- lm(v1 ~ fly + animal + v3, data = tmp)
summary(m)
m <- lm(fly ~ v1 + v2 + v3, data = tmp)
summary(m)
tmp[tmp==-1] <- 0
m <- glm(fly ~ v1 + v2 + v3, data = tmp, family = 'binomial')
summary(m)
predict(m, tmp)
predict(m, tmp) > 0
summary(m)
m <- glm(animal ~ v1 + v2 + v3, data = tmp, family = 'binomial')
summary(m)
tmp
as.numeric(predict(m, tmp) > 0)
predict(m, tmp)
round(predict(m, tmp),2)
summary(m)
tmp
tmp$v2 <- c(1,0,0,0)
tmp$v3 <- c(0,0,1,0)
m <- glm(animal ~ v1 + v2 + v3, data = tmp, family = 'binomial')
summary(m)
predict(m, tmp)
tmp
row.names(tmp) <- c("bird","dog","car","plane")
predict(m, tmp)
m <- glm(fly ~ v1 + v2 + v3, data = tmp, family = 'binomial')
predict(m, tmp)
m <- glm(fly ~ v2 + v3, data = tmp, family = 'binomial')
predict(m, tmp)
row.names(tmp) <- c("bird","dog","plane","car")
m <- glm(fly ~ 0 + v2 + v3, data = tmp, family = 'binomial')
predict(m, tmp)
m <- glm(fly ~ 0 + v1 + v2, data = tmp, family = 'binomial')
predict(m, tmp)
summary(m)
m <- glm(fly ~ 0 + v2, data = tmp, family = 'binomial')
summary(m)
predict(m, tmp)
m <- glm(fly ~ 0 + v1 + v2, data = tmp, family = 'binomial')
summary(m)
predict(m, tmp)
m <- glm(v1 ~ 0 + fly + animal, data = tmp, family = 'binomial')
summary(m)
predict(m, tmp)
tmp
round(predict(m, tmp),2)
m <- glm(v2 ~ 0 + fly + animal, data = tmp, family = 'binomial')
round(predict(m, tmp),2)
round(predict(m, tmp),3)
summary(m)
m <- glm(v2 ~ 0 + fly + animal, data = tmp, family = 'binomial')
summary(m)
round(predict(m, tmp),3)
m <- glm(v2 ~ fly + animal, data = tmp, family = 'binomial')
summary(m)
round(predict(m, tmp),3)
summary(m)
m <- glm(v2 ~ 0 + fly + animal, data = tmp, family = 'binomial')
summary(m)
m <- glm(v2 ~ 0 + fly + animal, data = tmp, family = 'binomial')
tmp
m <- glm(v3 ~ 0 + fly + animal, data = tmp, family = 'binomial')
round(predict(m, tmp),3)
tmp$v3 <- c(0,0,0,1)
m <- glm(v3 ~ 0 + fly + animal, data = tmp, family = 'binomial')
round(predict(m, tmp),3)
tmp
tmp[tmp==0] <- -1
m <- glm(v3 ~ 0 + fly + animal, data = tmp, family = 'binomial')
m <- lm(v3 ~ 0 + fly + animal, data = tmp)
round(predict(m, tmp),3)
summary(m)
tmp
round(predict(m, tmp),3)
m <- lm(v2 ~ 0 + fly + animal, data = tmp)
round(predict(m, tmp),3)
m <- lm(v1 ~ 0 + fly + animal, data = tmp)
round(predict(m, tmp),3)
m <- lm(fly ~ 0 + v1 + v2, data = tmp)
round(predict(m, tmp),3)
m <- lm(fly ~ 0 + v2, data = tmp)
round(predict(m, tmp),3)
summary(m)
m <- lm(fly ~ 0 + v1 + v2, data = tmp)
summary(m)
m <- lm(fly ~ 0 + v1 + v3, data = tmp)
summary(m)
round(predict(m, tmp),3)
tmp[tmp==-1] <- 0
m <- glm(fly ~ 0 + v1 + v2, data = tmp, family = 'binomial')
round(predict(m, tmp),3)
sig
sig <- function(n){1/(exp(-1 * n))}
sig(predict(m, tmp),3)
sig(predict(m, tmp))
sig
sig<-function(n){1/(1 + exp(-1 * n))}
sig(predict(m, tmp))
round(sig(predict(m, tmp),2)
)
round(sig(predict(m, tmp)),2)
m <- glm(fly ~ 0 + v2, data = tmp, family = 'binomial')
round(sig(predict(m, tmp)),2)
m <- glm(v2 ~ 0 + fly + animal, data = tmp, family = 'binomial')
round(sig(predict(m, tmp)),2)
m <- glm(v2 ~ fly + animal, data = tmp, family = 'binomial')
round(sig(predict(m, tmp)),2)
m <- glm(v2 ~ 0 + fly + animal, data = tmp, family = 'binomial')
round(sig(predict(m, tmp)),2)
m <- glm(v1 ~ 0 + fly + animal, data = tmp, family = 'binomial')
round(sig(predict(m, tmp)),2)
m <- glm(animal ~ 0 + v1 + v2, data = tmp, family = 'binomial')
round(sig(predict(m, tmp)),2)
summary(m)
tmp
tmp1 <- tmp
for(i in c(2:20)) tmp1 <- rbind(tmp, tmp1)
head(tmp1)
dim(tmp1)
tmp1 <- tmp1 + matrix(runif(80 * 5)/100, 80, 5)
m <- glm(animal ~ 0 + v1 + v2, data = tmp1, family = 'binomial')
tmp1[tmp1<0] <- 0
tmp1[tmp1>1] <- 1
m <- glm(animal ~ 0 + v1 + v2, data = tmp1, family = 'binomial')
summary(m)
predict(m, tmp)
mean(as.numeric(predict(m, tmp1)>0)==tmp1$animal)
sig(predict(m, tmp1)>0))
round(sig(predict(m, tmp1)>0),2)
round(sig(predict(m, tmp1)>0),2) > .5
as.numeric(round(sig(predict(m, tmp1)>0),2) > .5)
as.numeric(round(sig(predict(m, tmp1)>0),2) > .5)==tmp1$animal
mean(as.numeric(round(sig(predict(m, tmp1)>0),2) > .5)==tmp1$animal)
tmp1[1:5,]
tmp1 <- tmp
tmp1[tmp1==0] <- -1
for(i in c(2:20)) tmp1 <- rbind(tmp1, tmp)
head(tmp1)
tmp1 <- tmp
for(i in c(2:20)) tmp1 <- rbind(tmp1, tmp)
tmp1[tmp1==0] <- -1
tmp1 <- tmp1 + matrix((runif(80 * 5)-.5)/100, 80, 5)
head(tmp1)
m <- lm(v1 ~ 0 + fly + animal, data = tmp1)
summary(m)
m <- lm(v2 ~ 0 + fly + animal, data = tmp1)
summary(m)
m <- lm(fly ~ 0 + v1 + v2, data = tmp1)
summary(m)
m0 <- lm(fly ~ 0 + v2, data = tmp1)
summary(m0)
anova(m0, m)
m0 <- lm(fly ~ v2, data = tmp1)
m <- lm(fly ~ v1 + v2, data = tmp1)
summary(m)
summary(m0)
anova(m0, m)
m <- lm(v2 ~ 0 + fly + animal, data = tmp1)
summary(m0)
m <- lm(v1 ~ 0 + fly + animal, data = tmp1)
summary(m)
plot(tmp1)
plot(tmp1[,1:2])
plot(tmp1[,1:2], pch = 16, col = c(1:80)%4 + 1)
plot(tmp1[,1:2], pch = 16, col = c(1:80)%%4 + 1)
plot(tmp1[,1:2], pch = 16, col = c("red","orange","blue","green")[c(1:80)%%4 + 1])
head(tmp1)
tmp
plot(tmp1[,1:2], pch = 16, col = c("red","orange","blue","green")[c(0:79)%%4 + 1])
m <- lm(v2 ~ 0 + fly + animal, data = tmp1)
summary(m)
m <- lm(v1 ~ 0 + fly + animal, data = tmp1)
summary(m)
m <- lm(v1 ~ fly + animal, data = tmp1)
summary(m)
tmp <- tmp[,1:4]
tmp1 <- tmp1[,1:4]
head(tmp1)
m <- lm(fly ~ v1 + v2, data = tmp1)
summary(m)
m <- lm(animal ~ v1 + v2, data = tmp1)
summary(m)
tmp
m <- lm(v1 ~ fly + animal, data = tmp1)
summary(m)
tmp[tmp==0] <- -1
m <- lm(v1 ~ fly + animal, data = tmp1)
summary(m)
m <- lm(v1 ~ fly + animal, data = tmp)
summary(m)
summary(m)$r-squared
summary(m)$r.squared
round(summary(m)$r.squared,3)
round(summary(m)$coefficients, 3)
m <- lm(v1 ~ fly + animal, data = tmp)
round(summary(m)$coefficients, 3)
round(summary(m)$r.squared,3)
m <- lm(v1 ~ fly + animal + v2, data = tmp)
round(summary(m)$coefficients, 3)
round(summary(m)$r.squared,3)
m <- lm(v1 ~ fly + animal, data = tmp)
round(summary(m)$r.squared,3)
round(summary(m)$coefficients, 3)
m <- lm(fly ~ v1 + v2, data = tmp)
summary(m)
m <- lm(v1 ~ fly + animal, data = tmp1)
summary(m)$coefficients
summary(m)$r-squared
summary(m)$r.squared
m <- lm(animal ~ v1 + v2, data = tmp1)
summary(m)$coefficients
summary(m)$r.squared
tmp
m <- lm(v1 ~ fly + animal, data = tmp)
summary(m)
round(summary(m)$coefficients, 3)
m <- lm(v1 ~ fly + animal + v2, data = tmp)
round(summary(m)$coefficients, 3)
q()
shiny::runApp('C:/Github/CONNECT/JetsNSharks/JSModel')
runApp('C:/Github/CONNECT/JetsNSharks/JSModel')
runApp('C:/Github/CONNECT/JetsNSharks/JSModel')
runApp('C:/Github/CONNECT/JetsNSharks/JSModel')
runApp('C:/Github/CONNECT/JetsNSharks/JSModel')
runApp('C:/Github/CONNECT/JetsNSharks/JSModel')
runApp('C:/Github/CONNECT/JetsNSharks/JSModel')
runApp('C:/Github/CONNECT/JetsNSharks/JSModel')
runApp('C:/Github/CONNECT/JetsNSharks/JSModel')
runApp('C:/Github/CONNECT/JetsNSharks/JSModel')
setwd("C:/Github/CONNECT/JetsNSharks")
plot.wts <- dget("plot_wts.r")
plot.wts
ls()
rm(i,m, m0, sf sig, tmp, tmp.func, tmp1, vox)
rm(i,m, m0, sf sig, tmp, tmp.func, tmp1, vox)
rmp(i)
rm(i)
rm(m, m0)
rm(sf, sig, tmp, tmp.func, tmp1, vox)
ls()
jswts <- as.matrix(read.csv("JS_wts.csv", header = T, row.names = 1))
plt.wts(jswts)
plot.wts(jswts)
jswts <- as.matrix(read.csv("JS_wts.csv", header = T, row.names = 1))
plot.wts(jswts)
jswts <- as.matrix(read.csv("JS_wts.csv", header = T, row.names = 1))
plot.wts(jswts)
runApp('JSModel')
runApp('JSModel')
runApp('JSModel')
runApp('JSModel')
runApp('JSModel')
help(observe)
runApp('JSModel')
help(reactive)
runApp('JSModel')
runApp('JSModel')
runApp('JSModel')
runApp('JSModel')
runApp('JSModel')
help(observeEvent)
help(bindEvent)
runApp('JSModel')
runApp('JSModel')
runApp('JSModel')
runApp('JSModel')
runApp('JSModel')
save.image("C:/Github/CONNECT/JetsNSharks/jetsnsharks.RData")
runApp('JSModel')
