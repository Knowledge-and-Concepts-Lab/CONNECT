tmp(cbind(tmp, matrix(0, 100,4))
)
tmp<-cbind(tmp, matrix(0, 100,4))
for(i in c(21:24)) tmp[,i] <- (runif(100)*2 - 1) * runif(1)
image(tmp)
image(t(tmp), col = viridis(9))
image(cosine(t(tmp))[,100:1], col=viridis(9))
tmp1 <- cosine(t(tmp))
cor(lt(tmp1), lt(trud))
for(i in c(13:24)) tmp[,i] <- 0
image(cosine(t(tmp))[,100:1], col=viridis(9))
tmp1 <- cosine(t(tmp))
add.noise
image(cosine(t(add.noise(tmp, 5)))[,100:1], col=viridis(9))
image(cosine(t(add.noise(tmp, 1)))[,100:1], col=viridis(9))
image(cosine(t(add.noise(tmp, .2)))[,100:1], col=viridis(9))
image(cosine(t(add.noise(tmp, .4)))[,100:1], col=viridis(9))
image(cosine(t(add.noise(tmp, .6)))[,100:1], col=viridis(9))
cor(lt(cosine(t(add.noise(tmp, .6)))), lt(trud))
cor(lt(cosine(t(add.noise(tmp, 2)))), lt(trud))
cor(lt(cosine(t(add.noise(tmp, 3)))), lt(trud))
thrdmat <- tmp
image(tmp)
image(tmp, col = blue2red(21))
blue2red <- colorRampPalette(c("blue","gray","red"))
image(tmp, col = blue2red(21))
tmp[1,1]
image(t(tmp), col = blue2red(21))
tmp[,1:6] <- onedmat[,c(1,1,1,1,1,1)]
tmp[,7:12] <- -1 * onedmat[,c(1,1,1,1,1,1)]
image(t(tmp), col = blue2red(21))
cor(lt(cosine(t(add.noise(tmp, .6)))), lt(trud))
cor(lt(cosine(t(add.noise(tmp, .3)))), lt(trud))
cor(lt(cosine(t(add.noise(tmp, 3)))), lt(trud))
fstdmat <- tmp
tmp[,1:6] <- thrdmat[,c(5,5,5,5,5,5)]
tmp[,7:12] <- -1 * thrdmat[,c(5,5,5,5,5,5)]
image(t(tmp), col = blue2red(21))
cor(lt(cosine(t(add.noise(tmp, .6)))), lt(trud))
cor(lt(cosine(t(add.noise(tmp, 3)))), lt(trud))
secdmat <- tmp
tmp[,1:6] <- thrdmat[,c(9,9,9,9,9,9)]
tmp[,7:12] <- -1 * thrdmat[,c(9,9,9,9,9,9)]
image(t(tmp), col = blue2red(21))
cor(lt(cosine(t(add.noise(tmp, .6)))), lt(trud))
cor(lt(cosine(t(add.noise(tmp, 3)))), lt(trud))
thirddmat <- tmp
image(thrdmat)
image(t(thrdmat), col = blue2red(21))
alldmat <- thrdmat)
alldmat <- thrdmat
rm(thrdmat)
image(t(bmat), col = blue2red(21))
tmp[,1:12] <- bmat[,c(1,1,1,1,1,1,4,4,4,4,4,4)]
image(t(tmp), col = blue2red(21))
dim(tmp)
tmp[,13:24] <- 0
tmp <- (tmp * 2) -1
tmp[,13:24] <- 0
image(t(tmp), col = blue2red(21))
cor(lt(cosine(t(add.noise(tmp, 3)))), lt(trud))
cor(lt(cosine(t(add.noise(tmp, 5)))), lt(trud))
cor(lt(cosine(t(add.noise(tmp, 10)))), lt(trud))
cor(lt(cosine(t(add.noise(tmp, .1)))), lt(trud))
cor(lt(cosine(t(add.noise(tmp, 0)))), lt(trud))
cor(lt(cosine(t(add.noise(alldmat, 0)))), lt(trud))
cor(lt(cosine(t(add.noise(fstdmat, 0)))), lt(trud))
plot(tru[,1], fstdmat[,1])
binmat <- tmp
rm(bmat)
plot(tru[,2], tru[,1]+tru[,2])
plot(tru[,2], tru[,1]+tru[,2], col = pcols, pch = 16)
par(cex = 16)
par(col = pcols)
par(cex = 1)
par(pch = 1)
par(pch = 16)
plot(tru[,2], tru[,1]+tru[,2], col = pcols)
plot(tru[,1]+tru[,2], col = pcols)
tmp <- tru
tmp[,1] <-tmp[,1] + tmp[,2]
image(cosine(t(tmp)), col = blue2red(21))
image(cosine(t(tmp))[,100:1], col = blue2red(21))
tmp <- tru
image(cosine(t(tmp))[,100:1], col = blue2red(21))
image(cosine(t(tmp))[,100:1], col = viridis(9))
tmp[,1] <-tmp[,1] + tmp[,2]
image(cosine(t(tmp))[,100:1], col = viridis(9))
tmp <- tru
tmp[,1] <-tmp[,1] + tmp[,2] + runif(100)/5
image(cosine(t(tmp))[,100:1], col = viridis(9))
tmp[,1] <-tru[,1] + tru[,2] + runif(100)/2
image(cosine(t(tmp))[,100:1], col = viridis(9))
scatterplot3d(tmp[,1], tmp[,2], tmp[,3], color=pcols)
image(cosine(t(tmp))[,100:1], col = viridis(9))
image(cosine(t(tru))[,100:1], col = viridis(9))
mcors <- matrix(0,5,11)
for(i in c(1:11)){
tmp1 <- cosine(t(add.noise(binmat, (i-1) * 0.5)))
mcros[1,i] <- cor(lt(tmp1), lt(trud))}
for(i in c(1:11)){
tmp1 <- cosine(t(add.noise(binmat, (i-1) * 0.5)))
mcors[1,i] <- cor(lt(tmp1), lt(trud))}
plot(mcors[1,], type = "o")
plot(mcors[1,], type = "o", ylim = c(0,1))
for(i in c(1:11)){
tmp1 <- cosine(t(add.noise(fstdmat, (i-1) * 0.5)))
mcors[2,i] <- cor(lt(tmp1), lt(trud))}
lines(mcors[1,], type = "o", col = 2)
image(t(binmat), col = blue2red(21))
image(t(fstdmat), col = blue2red(21))
cor(lt(cosine(t(fstdmat[1:50,]))), lt(cosine(t(tru[1:50,]))))
tmp <- tru
plot(tmp[,1])
tmp[1:25,1] <- tmp[1:25,1] - runif(25)/3
plot(tmp[,1], col = pcols)
tmp[76:100,1] <- tmp[1:25,1] + runif(25)/3
plot(tmp[,1], col = pcols)
tmp <- tru
tmp[1:25,1] <- tmp[1:25,1] - runif(25)/3
tmp[76:100,1] <- tmp[76:100,1] + runif(25)/3
plot(tmp[,1], col = pcols)
tmp <- tru
tmp[1:25,1] <- tmp[1:25,1] - runif(25)/\2
tmp[1:25,1] <- tmp[1:25,1] - runif(25)/
[}
tmp[1:25,1] <- tmp[1:25,1] - runif(25)/2
tmp[76:100,1] <- tmp[76:100,1] + runif(25)/2
plot(tmp[,1], col = pcols)
image(t(cosine(tmp))[,100:1], col = viridis(9))
dim(tmp)
image(cosine(t(tmp))[,100:1], col = viridis(9))
image(cosine(t(tmp[,1]))[,100:1], col = viridis(9))
image(cosine(t(tmp))[,100:1], col = viridis(9))
image(as.matrix(dist(tmp))[,100:1], col = viridis(9))
image(as.matrix(dist(tmp))[,100:1], col = viridis(9)[9:1])
image(as.matrix(dist(tmp[,1]))[,100:1], col = viridis(9)[9:1])
tmp1 <- as.matrix(dist(tmp[,1]))
cor(lt(tmp1), lt(as.matrix(dist(tmp))))
tmp1 <- as.matrix(dist(binmat))
cor(lt(tmp1), lt(as.matrix(dist(tmp))))
cor(lt(tmp1), lt(as.matrix(dist(tru))))
tmp1 <- as.matrix(dist(onedmat))
cor(lt(tmp1), lt(as.matrix(dist(tru))))
tmp1 <- as.matrix(dist(alldmat))
cor(lt(tmp1), lt(as.matrix(dist(tru))))
tmp1 <- add.noise(as.matrix(dist(alldmat)), 3)
cor(lt(tmp1), lt(as.matrix(dist(tru))))
tmp1 <- add.noise(as.matrix(dist(alldmat)), 5)
cor(lt(tmp1), lt(as.matrix(dist(tru))))
tmp1 <- add.noise(as.matrix(dist(binmat)), 5)
cor(lt(tmp1), lt(as.matrix(dist(tru))))
tmp1 <- add.noise(as.matrix(dist(binmat)), 10)
cor(lt(tmp1), lt(as.matrix(dist(tru))))
tmp1 <- add.noise(as.matrix(dist(binmat)), 1)
cor(lt(tmp1), lt(as.matrix(dist(tru))))
tmp1 <- add.noise(as.matrix(dist(binmat)), 0)
cor(lt(tmp1), lt(as.matrix(dist(tru))))
tmp1 <- add.noise(as.matrix(dist(onedmat)), 0)
cor(lt(tmp1), lt(as.matrix(dist(tru))))
tmp1 <- add.noise(as.matrix(dist(onedmat)), 5)
cor(lt(tmp1), lt(as.matrix(dist(tru))))
tmp1 <- add.noise(as.matrix(dist(fstdmat)), 5)
cor(lt(tmp1), lt(as.matrix(dist(tru))))
image(onedmat)
dim(onedmat)
rm(onedmat)
tmp1 <- add.noise(as.matrix(dist(fstdmat)), 10)
rm(onedmat)
cor(lt(tmp1), lt(as.matrix(dist(tru))))
tmp1 <- add.noise(as.matrix(dist(fstdmat)), 1)
cor(lt(tmp1), lt(as.matrix(dist(tru))))
tmp1 <- add.noise(as.matrix(dist(binmat)), 1)
cor(lt(tmp1), lt(as.matrix(dist(tru))))
tmp1 <- add.noise(as.matrix(dist(binmat)), 10)
cor(lt(tmp1), lt(as.matrix(dist(tru))))
tmp1 <- add.noise(as.matrix(dist(alldmat)), 10)
cor(lt(tmp1), lt(as.matrix(dist(tru))))
tmp1 <- add.noise(as.matrix(dist(decdmat)), 10)
tmp1 <- add.noise(as.matrix(dist(secdmat)), 10)
cor(lt(tmp1), lt(as.matrix(dist(tru))))
tmp1 <- add.noise(as.matrix(dist(secdmat)), 1)
cor(lt(tmp1), lt(as.matrix(dist(tru))))
bindmat <- binmat
rm(binmat)
for(i in c(1:11)){
tmp1[1,i] <- add.noise(as.matrix(dist(bindmat)), i-1)
mcors[}
for(i in c(1:11)){
tmp1 <- add.noise(as.matrix(dist(bindmat)), i-1)
mcors[1,i] <- cor(lt(as.matrix(dist(tru))), lt(tmp1))}
plot(c(1:10), mcors[1,], type = "o", ylim = c(0,1))
plot(c(0:10), mcors[1,], type = "o", ylim = c(0,1))
for(i in c(1:11)){
tmp1 <- add.noise(as.matrix(dist(fstdmat)), i-1)
mcors[2,i] <- cor(lt(as.matrix(dist(tru))), lt(tmp1))}
plot(c(0:10), mcors[2,], type = "o", col = 2)
plot(c(0:10), mcors[1,], type = "o", ylim = c(0,1))
lines(c(0:10), mcors[2,], type = "o", col = 2)
for(i in c(1:11)){
tmp1 <- add.noise(as.matrix(dist(secdmat)), i-1)
mcors[3,i] <- cor(lt(as.matrix(dist(tru))), lt(tmp1))}
lines(c(0:10), mcors[2,], type = "o", col = 2, lty = 2)
lines(c(0:10), mcors[3,], type = "o", col = 2, lty = 2)
for(i in c(1:11)){
tmp1 <- add.noise(as.matrix(dist(thirddmat)), i-1)
mcors[4,i] <- cor(lt(as.matrix(dist(tru))), lt(tmp1))}
lines(c(0:10), mcors[4,], type = "o", col = 2, lty = 3)
for(i in c(1:11)){
tmp1 <- add.noise(as.matrix(dist(alldmat)), i-1)
mcors[5,i] <- cor(lt(as.matrix(dist(tru))), lt(tmp1))}
lines(c(0:10), mcors[5,], type = "o", col = 3)
legend(7,1,lty = c(1,1,2,3,1), col = c(1,2,2,2,3), legend = c("Binary","1sr only","2nd only","3rd only","All"), cex = 0.7, bty = "n")
par(mar = c(4,4,2,2), oma = c(2,2,2,2))
plot(c(0:10), mcors[1,], type = "o", ylim = c(0,1), xlab = "Noise", ylab = "Correlation")
lines(c(0:10), mcors[2,], type = "o", col = 2)
lines(c(0:10), mcors[3,], type = "o", col = 2, lty = 2)
lines(c(0:10), mcors[4,], type = "o", col = 2, lty = 3)
lines(c(0:10), mcors[5,], type = "o", col = 3)
legend(7,1,lty = c(1,1,2,3,1), col = c(1,2,2,2,3), legend = c("Binary","1sr only","2nd only","3rd only","All"), bty = "n")
plot(c(0:10), mcors[1,], type = "o", ylim = c(0,1), xlab = "Noise", ylab = "Correlation")
lines(c(0:10), mcors[2,], type = "o", col = 2)
lines(c(0:10), mcors[3,], type = "o", col = 2, lty = 2)
lines(c(0:10), mcors[4,], type = "o", col = 2, lty = 3)
lines(c(0:10), mcors[5,], type = "o", col = 3)
legend(7,1,lty = c(1,1,2,3,1), col = c(1,2,2,2,3), legend = c("Binary","1st only","2nd only","3rd only","All"), bty = "n")
title("Simulated RSA with different neural codes")
plot.srsa <- function(){
plot(c(0:10), mcors[1,], type = "o", ylim = c(0,1), xlab = "Noise", ylab = "Correlation")
lines(c(0:10), mcors[2,], type = "o", col = 2)
lines(c(0:10), mcors[3,], type = "o", col = 2, lty = 2)
lines(c(0:10), mcors[4,], type = "o", col = 2, lty = 3)
lines(c(0:10), mcors[5,], type = "o", col = 3)
legend(7,1,lty = c(1,1,2,3,1), col = c(1,2,2,2,3), legend = c("Binary","1st only","2nd only","3rd only","All"), bty = "n")
title("Simulated RSA with different neural codes")}
plot.srsa()
trud <- as.matrix(dist(tru))
image(trud[,100:1])
image(trud[,100:1], col = blue2red(100))
image(trud[,100:1], col = blue2red(100)[100:1])
image(trud[,100:1], col = viridis(9))
image(trud[,100:1], col = viridis(11))
image(trud[,100:1], col = viridis(11)[11:1])
image(trud[,100:1], col = viridis(11)[11:1], xaxt = "n", yaxt="n")
image(trud[,100:1], col = jet.colors(11)[11:1], xaxt = "n", yaxt="n")
image(trud[,100:1], col = heat(11)[11:1], xaxt = "n", yaxt="n")
image(trud[,100:1], col = heat.colors(11)[11:1], xaxt = "n", yaxt="n")
image(trud[,100:1], col = blue2red(11)[11:1], xaxt = "n", yaxt="n")
image(as.matrix(dist(bindmat))[,100:1], col = blue2red(11)[11:1], xaxt = "n", yaxt="n")
dim(bindmat)
range(bindmat)
bindmat[,7:12] <- bindmat[,13:18]
bindmat[,13:24] <- 0
image(bindmat)
image(as.matrix(dist(bindmat))[,100:1], col = blue2red(11)[11:1], xaxt = "n", yaxt="n")
image(t(bindmat))
image(as.matrix(dist(bindmat))[,100:1], col = blue2red(11)[11:1], xaxt = "n", yaxt="n")
image(as.matrix(dist(fstdmat))[,100:1], col = blue2red(11)[11:1], xaxt = "n", yaxt="n")
image(as.matrix(dist(secdmat))[,100:1], col = blue2red(11)[11:1], xaxt = "n", yaxt="n")
image(as.matrix(dist(thirddmat))[,100:1], col = blue2red(11)[11:1], xaxt = "n", yaxt="n")
image(as.matrix(dist(alldmat))[,100:1], col = blue2red(11)[11:1], xaxt = "n", yaxt="n")
image(t(bindmat), col = blue2red(11), xaxt = "n", yaxt="n")
bindmat[,7:12] <- -1 * bindmat[,1:6]
image(t(bindmat), col = blue2red(11), xaxt = "n", yaxt="n")
image(t(fstdmat), col = blue2red(11), xaxt = "n", yaxt="n")
image(t(secdmat), col = blue2red(11), xaxt = "n", yaxt="n")
image(t(thirddmat), col = blue2red(11), xaxt = "n", yaxt="n")
image(t(alldmat), col = blue2red(11), xaxt = "n", yaxt="n")
plot.srsa()
save.image("C:\\Users\\ttrog\\Box\\Work\\PaperDrafts\\InPreparation\\CoxETALEcogNRSA\\demo.RData")
q()
.libPaths()
install.packages("tidyverse")
library(tidyverse)
library(tidytext)
install.packages("tidytext")
library(tidytext)
tmp <- read.csv("788.csv", header = T, stringsAsFactors=F)
head(tmp)
cdf <- tibble(tmp[,1])
summary(cdf)
tmp[1:5]
dim(tmp)
tmp[1:5,1:5]
dim(cdf)
cdf[1:5,1]
tmp <- readr("788.csv")
library(readr)
tmp <- readr("788.csv")
readr
tmp <- read_csv("788.csv")
spec(tmp)
head(tmp)
cdf <- tibble(tmp[,1])
cdf %>% unnest_tokens(word, cdf)
head(cdf)
cdf %>% unnest_tokens(word, caption)
dim(tmp)
cdf <- tibble(line = c(1:5661), word = tmp[,1])
head(cdf)
cdf <- tibble(line = c(1:5661), tmp[,1])
wc <- cdf %>% unnest_tokens(word, caption)
dim(wc)
head(wc)
words <- cdf %>% unnest_tokens(word, caption)
words <- words %>% anti_join(stop_words)
dim(words)
wc <- words %>% count(word, sort = T)
head(wc)
dim(wc)
wc[4550:4597,]
sum(wc[,2]==1)
wc[1:20,1]
hist(wc[,1])
hist(wc[,2])
head(wc)
wc$n
hist(wc$n)
wc <- wc[wc$n > 1,
]
dim(wc)
hist(wc)
hist(wc$n)
dim(wc)
hist(wc$n, 50)
wc
hist(sqrt(wc$n), 50)
head(tmp)
rep(c(1:3), times = 2)
dim(tmp)
5660/20
tmp <- tmp[1:5000,]
ntile <- sort(rep(c(1:250), times = 20)
)
plot(ntile)
ntile{1:250]
ntile[1:250]
cdf <- tibble(line = c(1:5000, ntile, tmp[,1])
[}
cdf <- tibble(line = c(1:5000), ntile, tmp[,1])
head(cdf)
ls()
rm(list = ls())
tmp <- read_csv("788.csv")
cdf <- tibble(line = c(1:5000), ntile, tmp[,1])
tmp <- read_csv("788.csv")[1:5000,]
cdf <- tibble(line = c(1:5000), ntile, tmp[,1])
ntile <- sort(rep(c(1:250), times = 20))
cdf <- tibble(line = c(1:5000), ntile, tmp[,1])
head(cdf)
words <- cdf %>% unnest_tokens(word, caption) %>% count(ntile, word, sort = T)
words
words <- words %>% anti_join(stop_words, words)
words <- words %>% anti_join(stop_words(), words)
ntile
ntile <- sort(rep(c(1:20), times = 250))
cdf <- tibble(line = c(1:5000), ntile, tmp[,1])
words <- cdf %>% unnest_tokens(word, caption) %>% count(ntile, word, sort = T)
head(words)
total_words <- words %>% group_by(ntile) %>% summarize(total = sum(n))
total_words
words <- left_join(words, total_words)
head(words)
frq_by_rank <- words %>% group_by(ntile) %>% mutate(rank = row_number(), tf = n/total) %>%ungroup()
head(frq_by_rank)
frq_by_rank %>% ggplot(aes(rank, tf, color=ntile)) +
 geom_line(size = 1.1, alpha = 0.8, show.legend = FALSE) + 
  scale_x_log10() +
  scale_y_log10()
tfidf <- words %>% bind_tf_idf(ntile, word, n)
head(tfidf)
plot(tfidf$tf_idf)
tfidf %>% select(-total) %>% arrange(desc(tf_idf))
tfidf %>% group_by(ntile) %>% slice_max(tf_idf, n = 10), %>% ungroup %>%
tfidf %>% group_by(ntile) %>% slice_max(tf_idf, n = 10) %>% ungroup %>%
ggplot(aes(tf_idf, fct_reorder(word, tf_idf), fill = ntile)) +
 geom_col(show.legend = FALSE) +
  facet_wrap(~ntile, ncol = 5, scales = "free") +
labs(x = "tf-idf", y = NULL)
tfidf)
tfidf
help(slice_max)
tfidf %>% group_by(ntile) %>% slice_max(tfidf, n = 5, with_ties=F) %>% ungroup
tfidf %>% group_by(ntile) %>% slice_max(tf_idf, n = 5, with_ties=F) %>% ungroup
tfidf %>% group_by(ntile) %>% slice_max(tf, n = 5, with_ties=F) %>% ungroup
tfidf %>% group_by(ntile) %>% slice_max(tf, n = 10, with_ties=F) %>% ungroup
head(words)
words <- word %>% anti_join(stop_words)
words <- word %>% anti_join(stop_words())
words <- words %>% anti_join(stop_words)
head(words)
dim(words)
tmp1 <- tibble(cno = c(1:5000), ntile, tmp[,1])
tmp1
tmp1 <- unnest_tokens(word, tmp1)
tmp1 <- tmp1 %>% unnest_tokens(word, caption)
head(tmp1)
tmp1
tmp1 <- tmp1 %>% anti_join(stop_words)
dim(tmp1)
tmp1
tfidf
words
tfidf <- words %>% bind_tf_idf(word, ntile, n)
tfidf
tfidf %>% group_by(ntile) %>% slice_max(tf, n = 10, with_ties=F) %>% ungroup
tfidf[tfidf$ntile==1,]
tfidf[tfidf$ntile==2,]
tfidf[tfidf$ntile==3,]
tfidf[tfidf$ntile==20,]
tmp1 <- tfidf %>% group_by(ntile) %>% slice_max(tf, n = 10, with_ties=F) %>% ungroup
tmp1[tfidf$ntile==20,]
tmp1[tmp1f$ntile==20,]
tmp1
tmp1[tmp1$ntile==20,]
tmp1[tmp1$ntile==1,]
words
library(SnowballC)
wordStem(words$word)
words$word <- wordStem(words$word)
words
library(topicmodel)
install.packages(topicmodel)
install.packages("topicmodel")
install.packages("topicmodels")
library(topicmodels)
words
names(words)
names(words) <- c("document", "term", "count", "total")
words
dtm <- cast_dtm(words[,1:3])
dtm <- words %>% cast_dtm(document, term, count)
dtm
cap_lda <- LDA(dtm, k = 10, control=seed(1234))
cap_lda <- LDA(dtm, k = 10, control=list(seed=1234))
cap_lda
cap_lda$beta
cap_topics <- tidy(cap_lda, matrix = "beta")
install.packages("reshape2")
library(reshape2)
cap_topics <- tidy(cap_lda, matrix = "beta")
cap_topics
cap_topics %>% group_by(topic) %>% arrange(desc(beta))
cap_topics %>% group_by(topic) %>% arrange(desc(beta)) %>% ungroup()
rawdat <- tmo
rawdat <- tmp
tmp <- cap_topics[cap_topics$topic==1,]
tmp
tmp %>% arrange(desc(beta))
tmp <- cap_topics[cap_topics$topic==2,]
tmp %>% arrange(desc(beta))
tmp <- cap_topics[cap_topics$topic==3,]
tmp %>% arrange(desc(beta))
tmp <- cap_topics[cap_topics$topic==1,]
sum(cap_topics$beta[cap_topics$term==tmp$term[1]])
tmp <- cap_topics[cap_topics$topic==10,]
tmp %>% arrange(desc(beta))
dim(cap_topics)
getor <- function(n){
w <- d$term[n]
s <- sum(d$beta[d$term==w])
lor <- log(w / (s-w))
lor}
getlor <- function(d, n){
w <- d$term[n]
s <- sum(d$beta[d$term==w])
lor <- log(w / (s-w))
lor}
getlor(cap_topics, 1)
tmp <- cap_topics
tmp$term[1]
tmp$beta[tmp$term=="space"]
sum(tmp$beta[tmp$term=="space"])
getlor
getlor<-function(d, n){
w <- d$term[n]
s <- sum(d$beta[d$term==w])
lor <- log(d$beta[n] / (s-w))
lor}
get.lor(tmp, 1)
getlor(tmp, 1)
getlor
getlor<-function(d, n){
w <- d$term[n]
wb <- d$beta[n]
s <- sum(d$beta[d$term==w])
lor <- log(wb / ((s - wb)/9))
lor}
getlor(tmp, 1)
getlor(tmp, 2)
dim(tmp)
lors <- rep(0, times = 33870)
for(i in c(1:33870)) lors[i] <- getlor(tmp, i)
tmp1 <- bind_cols(tmp, lors)
tmp1
names(tmp1)[4] <- "lor"
tmp2 <- tmp1[tmp1$topic==1,]
tmp2 %>% arrange(desc(lor))
log(1)
log(0)
sum(tmp1$lor == Inf)
tmp1 <- tmp1[tmp1$lor != Inf,]
tmp2 <- tmp1[tmp1$topic==1,]
tmp2 %>% arrange(desc(lor))
tmp2$term[1:50]
tmp2 <- tmp2 %>% arrange(desc(lor))
tmp2$term[1:50]
tmp2 <- tmp1[tmp1$topic==2,] %>% arrange(desc(lor))
tmp2$term[1:50]
tmp2 <- tmp1[tmp1$topic==3,] %>% arrange(desc(lor))
tmp2$term[1:50]
q()
